/* eslint-disable @typescript-eslint/strict-boolean-expressions */
/* eslint-disable @typescript-eslint/no-require-imports */
/* eslint-disable @typescript-eslint/no-var-requires */
import { resolve } from 'path';
import fs from 'fs-extra';
import prettier from 'prettier';

import Prism from 'prismjs';

const prettierOptions = require('@void-aurora/prettier-config');

const components = require('prismjs/components.js');
const getLoader = require('prismjs/dependencies');

const outputHeader = `/* Auto generated by scripts/gen-prism.ts, do not modify manually. */\n/* eslint-disable */\n\n`;

async function output(filename: string, content: string): Promise<void> {
  return fs.outputFile(
    resolve(__dirname, '..', 'src', 'prism', filename),
    prettier.format(`${outputHeader}${content}`, { ...prettierOptions, parser: 'typescript' }),
  );
}

function importLanguagesSortedByRequire(): string[] {
  const languages = Object.keys(components.languages).filter(l => l !== 'meta');
  const loadedLanguages = new Set<string>();
  const loaded = [...loadedLanguages, ...Object.keys(components.languages)];
  const languagesSorted: string[] = [];

  getLoader(components, languages, loaded).load((lang: string): void => {
    if (!components.languages[lang]) {
      console.warn(`Language does not exists: ${lang}`);
      return;
    }

    const line = `require('prismjs/components/prism-${lang}.js');`;

    languagesSorted.push(line);
    loadedLanguages.add(lang);
  });

  return languagesSorted;
}

async function generate(): Promise<void> {
  const importLanguages = importLanguagesSortedByRequire();

  console.log(Object.keys(Prism.languages));

  await output(
    'core.ts',
    [
      "const ctx: any = typeof window === 'undefined' ? (typeof self === 'undefined' ? {} : self) : window;",
      'ctx.Prism = { manual: true, disableWorkerMessageHandler: true };',
      '',
      "const Prism: typeof import('prismjs') = require('prismjs/components/prism-core.js');",
      '',
      ...importLanguages,
      '',
      'export { Prism }',
    ].join('\n'),
  );
  console.log(`Components amount: ${importLanguages.length}`);
}

generate().catch(console.error);
